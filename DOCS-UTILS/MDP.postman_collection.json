{
	"info": {
		"_postman_id": "34ae8479-64f5-4202-9fad-c407e490210b",
		"name": "MDP",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "TypeMachine",
			"item": [
				{
					"name": "All Type of Machine",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0db1de29-6f2b-4adc-a28a-5d7ff89fd691",
								"exec": [
									"var contentTypeHeaderExists = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"tests[\"Has Content-Type\"] = contentTypeHeaderExists;",
									"",
									"if (contentTypeHeaderExists) {",
									"tests[\"Content-Type is application/json\"] =",
									"responseHeaders[\"Content-Type\"].has(\"application/json\");",
									"}",
									"",
									"tests[\"Body contains typeMachineID\"] = responseBody.has(\"id\");",
									"tests[\"Body contains description\"] = responseBody.has(\"description\");",
									"tests[\"Body contains OperationsIds\"] = responseBody.has(\"operationsIds\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/TypeMachine",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"TypeMachine"
							]
						}
					},
					"response": []
				},
				{
					"name": "Specific Type of Machine",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9b236274-705e-43ce-8f2b-5fcc49f97104",
								"exec": [
									"var contentTypeHeaderExists = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"tests[\"Has Content-Type\"] = contentTypeHeaderExists;",
									"",
									"if (contentTypeHeaderExists) {",
									"tests[\"Content-Type is application/json\"] =",
									"responseHeaders[\"Content-Type\"].has(\"application/json\");",
									"}",
									"",
									"tests[\"Body contains Id\"] = responseBody.has(\"id\");",
									"tests[\"Body contains description\"] = responseBody.has(\"description\");",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/TypeMachine/3",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"TypeMachine",
								"3"
							]
						}
					},
					"response": []
				},
				{
					"name": "Machines of Type Machine",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9b236274-705e-43ce-8f2b-5fcc49f97104",
								"exec": [
									"var contentTypeHeaderExists = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"tests[\"Has Content-Type\"] = contentTypeHeaderExists;",
									"",
									"if (contentTypeHeaderExists) {",
									"tests[\"Content-Type is application/json\"] =",
									"responseHeaders[\"Content-Type\"].has(\"application/json\");",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/TypeMachine/1/Machines",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"TypeMachine",
								"1",
								"Machines"
							]
						}
					},
					"response": []
				},
				{
					"name": "Opeations of Type Machine",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9b236274-705e-43ce-8f2b-5fcc49f97104",
								"exec": [
									"var contentTypeHeaderExists = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"tests[\"Has Content-Type\"] = contentTypeHeaderExists;",
									"",
									"if (contentTypeHeaderExists) {",
									"tests[\"Content-Type is application/json\"] =",
									"responseHeaders[\"Content-Type\"].has(\"application/json\");",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/TypeMachine/5/operations",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"TypeMachine",
								"5",
								"operations"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create a Type of Machine",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a514c5a8-480f-4e40-a9d0-78d422ffda33",
								"exec": [
									"var contentTypeHeaderExists = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"tests[\"Has Content-Type\"] = contentTypeHeaderExists;",
									"",
									"if (contentTypeHeaderExists) {",
									"tests[\"Content-Type is application/json\"] =",
									"responseHeaders[\"Content-Type\"].has(\"application/json\");",
									"}",
									"",
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"Description\": \"it works\",\n\t\"OperationsIds\": [5,2]\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/TypeMachine",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"TypeMachine"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update a Type of Machine",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a514c5a8-480f-4e40-a9d0-78d422ffda33",
								"exec": [
									"var contentTypeHeaderExists = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"tests[\"Has Content-Type\"] = contentTypeHeaderExists;",
									"",
									"if (contentTypeHeaderExists) {",
									"tests[\"Content-Type is application/json\"] =",
									"responseHeaders[\"Content-Type\"].has(\"application/json\");",
									"}",
									"",
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"Description\": \" descrição do novo tipo de máquina updated\",\n\t\"OperationsIds\": [1,3]\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/TypeMachine/3",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"TypeMachine",
								"3"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete a specific Type of Machine",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a514c5a8-480f-4e40-a9d0-78d422ffda33",
								"exec": [
									"var contentTypeHeaderExists = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"tests[\"Has Content-Type\"] = contentTypeHeaderExists;",
									"",
									"if (contentTypeHeaderExists) {",
									"tests[\"Content-Type is application/json\"] =",
									"responseHeaders[\"Content-Type\"].has(\"application/json\");",
									"}",
									"",
									"tests[\"Status code is 201\"] = responseCode.code === 201;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/TypeMachine/5",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"TypeMachine",
								"5"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Machine",
			"item": [
				{
					"name": "All Machine",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0db1de29-6f2b-4adc-a28a-5d7ff89fd691",
								"exec": [
									"var contentTypeHeaderExists = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"tests[\"Has Content-Type\"] = contentTypeHeaderExists;",
									"",
									"if (contentTypeHeaderExists) {",
									"tests[\"Content-Type is application/json\"] =",
									"responseHeaders[\"Content-Type\"].has(\"application/json\");",
									"}",
									"",
									"tests[\"Body contains Id\"] = responseBody.has(\"id\");",
									"tests[\"Body contains IdTypeMachine\"] = responseBody.has(\"idTypeMachine\");",
									"tests[\"Body contains Brand\"] = responseBody.has(\"brand\");",
									"tests[\"Body contains Model\"] = responseBody.has(\"model\");",
									"tests[\"Body contains Localization\"] = responseBody.has(\"localization\");",
									"tests[\"Body contains Description\"] = responseBody.has(\"description\");",
									"tests[\"Body contains InspectionDate\"] = responseBody.has(\"inspectionDate\");",
									"tests[\"Body contains StatusOperational\"] = responseBody.has(\"statusOperational\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/Machine",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"Machine"
							]
						}
					},
					"response": []
				},
				{
					"name": "Specific Machine",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9b236274-705e-43ce-8f2b-5fcc49f97104",
								"exec": [
									"var contentTypeHeaderExists = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"tests[\"Has Content-Type\"] = contentTypeHeaderExists;",
									"",
									"if (contentTypeHeaderExists) {",
									"tests[\"Content-Type is application/json\"] =",
									"responseHeaders[\"Content-Type\"].has(\"application/json\");",
									"}",
									"",
									"tests[\"Body contains Id\"] = responseBody.has(\"id\");",
									"tests[\"Body contains IdTypeMachine\"] = responseBody.has(\"idTypeMachine\");",
									"tests[\"Body contains Brand\"] = responseBody.has(\"brand\");",
									"tests[\"Body contains Model\"] = responseBody.has(\"model\");",
									"tests[\"Body contains Localization\"] = responseBody.has(\"localization\");",
									"tests[\"Body contains Description\"] = responseBody.has(\"description\");",
									"tests[\"Body contains InspectionDate\"] = responseBody.has(\"inspectionDate\");",
									"tests[\"Body contains StatusOperational\"] = responseBody.has(\"statusOperational\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/Machine/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"Machine",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create a Machine",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a514c5a8-480f-4e40-a9d0-78d422ffda33",
								"exec": [
									"var contentTypeHeaderExists = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"tests[\"Has Content-Type\"] = contentTypeHeaderExists;",
									"",
									"if (contentTypeHeaderExists) {",
									"tests[\"Content-Type is application/json\"] =",
									"responseHeaders[\"Content-Type\"].has(\"application/json\");",
									"}",
									"",
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"IdTypeMachine\": 1,\n\t\"Brand\": \"tt\",\n\t\"Model\": \"ss\",\n\t\"Localization\": \"fabric\",\n\t\"Description\": \"works\",\n\t\"InspectionDate\": \"2019-10-30T00:00:00\",\n\t\"StatusOperational\": 1\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/Machine",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"Machine"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update a Machine",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a514c5a8-480f-4e40-a9d0-78d422ffda33",
								"exec": [
									"var contentTypeHeaderExists = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"tests[\"Has Content-Type\"] = contentTypeHeaderExists;",
									"",
									"if (contentTypeHeaderExists) {",
									"tests[\"Content-Type is application/json\"] =",
									"responseHeaders[\"Content-Type\"].has(\"application/json\");",
									"}",
									"",
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"IdTypeMachine\": 4,\n\t\"Brand\": \"Swarovski\",\n\t\"Model\": \"Zinc\",\n\t\"Localization\": \"fabric\",\n\t\"Description\": \"works updated\",\n\t\"InspectionDate\": \"2019-10-30T00:00:00\",\n\t\"StatusOperational\": 1\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/Machine/3",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"Machine",
								"3"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete a specific Machine",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a514c5a8-480f-4e40-a9d0-78d422ffda33",
								"exec": [
									"var contentTypeHeaderExists = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"tests[\"Has Content-Type\"] = contentTypeHeaderExists;",
									"",
									"if (contentTypeHeaderExists) {",
									"tests[\"Content-Type is application/json\"] =",
									"responseHeaders[\"Content-Type\"].has(\"application/json\");",
									"}",
									"",
									"tests[\"Status code is 201\"] = responseCode.code === 201;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/Machine/4",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"Machine",
								"4"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "ProductionLine",
			"item": [
				{
					"name": "All Production Line",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0db1de29-6f2b-4adc-a28a-5d7ff89fd691",
								"exec": [
									"var contentTypeHeaderExists = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"tests[\"Has Content-Type\"] = contentTypeHeaderExists;",
									"",
									"if (contentTypeHeaderExists) {",
									"tests[\"Content-Type is application/json\"] =",
									"responseHeaders[\"Content-Type\"].has(\"application/json\");",
									"}",
									"",
									"tests[\"Body contains idProductionLine\"] = responseBody.has(\"id\");",
									"tests[\"Body contains machinesIds\"] = responseBody.has(\"machinesIds\");",
									"tests[\"Body contains description\"] = responseBody.has(\"description\");",
									"tests[\"Body contains productionLineNumber\"] = responseBody.has(\"productionLineNumber\");",
									"tests[\"Body contains dateOperationStarted\"] = responseBody.has(\"dateOperationStarted\");",
									"tests[\"Body contains dateOperationFinished\"] = responseBody.has(\"dateOperationFinished\");",
									"tests[\"Body contains active\"] = responseBody.has(\"active\");",
									"tests[\"Body contains dailyProductionCapacity\"] = responseBody.has(\"dailyProductionCapacity\");",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/ProductionLine",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"ProductionLine"
							]
						}
					},
					"response": []
				},
				{
					"name": "Specific Production Line",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9b236274-705e-43ce-8f2b-5fcc49f97104",
								"exec": [
									"var contentTypeHeaderExists = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"tests[\"Has Content-Type\"] = contentTypeHeaderExists;",
									"",
									"if (contentTypeHeaderExists) {",
									"tests[\"Content-Type is application/json\"] =",
									"responseHeaders[\"Content-Type\"].has(\"application/json\");",
									"}",
									"",
									"tests[\"Body contains id\"] = responseBody.has(\"id\");",
									"tests[\"Body contains description\"] = responseBody.has(\"description\");",
									"tests[\"Body contains productionLineNumber\"] = responseBody.has(\"productionLineNumber\");",
									"tests[\"Body contains dateOperationStarted\"] = responseBody.has(\"dateOperationStarted\");",
									"tests[\"Body contains dateOperationFinished\"] = responseBody.has(\"dateOperationFinished\");",
									"tests[\"Body contains active\"] = responseBody.has(\"active\");",
									"tests[\"Body contains dailyProductionCapacity\"] = responseBody.has(\"dailyProductionCapacity\");",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/ProductionLine/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"ProductionLine",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create a Production Line",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a514c5a8-480f-4e40-a9d0-78d422ffda33",
								"exec": [
									"var contentTypeHeaderExists = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"tests[\"Has Content-Type\"] = contentTypeHeaderExists;",
									"",
									"if (contentTypeHeaderExists) {",
									"tests[\"Content-Type is application/json\"] =",
									"responseHeaders[\"Content-Type\"].has(\"application/json\");",
									"}",
									"",
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"MachinesIds\": [1,2],\n\t\"Description\": \" descrição da nova máquina\",\n\t\"ProductionLineNumber\": 1,\n\t\"DateOperationStarted\": \"2019-10-26T00:00:00\",\n\t\"DateOperationFinished\": \"2019-10-30T00:00:00\",\n\t\"Active\": true,\n\t\"DailyProductionCapacity\": \"5000\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/ProductionLine",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"ProductionLine"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update a Production Line",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a514c5a8-480f-4e40-a9d0-78d422ffda33",
								"exec": [
									"var contentTypeHeaderExists = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"tests[\"Has Content-Type\"] = contentTypeHeaderExists;",
									"",
									"if (contentTypeHeaderExists) {",
									"tests[\"Content-Type is application/json\"] =",
									"responseHeaders[\"Content-Type\"].has(\"application/json\");",
									"}",
									"",
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"MachinesIds\": [7],\n\t\"Description\": \" descrição da nova máquina updated\",\n\t\"ProductionLineNumber\": \"1\",\n\t\"DateOperationStarted\": \"2020-10-26T00:00:00\",\n\t\"DateOperatedFinished\": \"2020-10-30T00:00:00\",\n\t\"Active\": true,\n\t\"DailyProductionCapacity\": \"5000\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/ProductionLine/3",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"ProductionLine",
								"3"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete a specific Production Line",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a514c5a8-480f-4e40-a9d0-78d422ffda33",
								"exec": [
									"var contentTypeHeaderExists = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"tests[\"Has Content-Type\"] = contentTypeHeaderExists;",
									"",
									"if (contentTypeHeaderExists) {",
									"tests[\"Content-Type is application/json\"] =",
									"responseHeaders[\"Content-Type\"].has(\"application/json\");",
									"}",
									"",
									"tests[\"Status code is 201\"] = responseCode.code === 201;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/ProductionLine/4",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"ProductionLine",
								"4"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Operation",
			"item": [
				{
					"name": "All Operation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0db1de29-6f2b-4adc-a28a-5d7ff89fd691",
								"exec": [
									"var contentTypeHeaderExists = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"tests[\"Has Content-Type\"] = contentTypeHeaderExists;",
									"",
									"if (contentTypeHeaderExists) {",
									"tests[\"Content-Type is application/json\"] =",
									"responseHeaders[\"Content-Type\"].has(\"application/json\");",
									"}",
									"",
									"tests[\"Body contains idOperation\"] = responseBody.has(\"id\");",
									"tests[\"Body contains description\"] = responseBody.has(\"description\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/operation",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"operation"
							]
						}
					},
					"response": []
				},
				{
					"name": "Specific Operation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9b236274-705e-43ce-8f2b-5fcc49f97104",
								"exec": [
									"var contentTypeHeaderExists = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"tests[\"Has Content-Type\"] = contentTypeHeaderExists;",
									"",
									"if (contentTypeHeaderExists) {",
									"tests[\"Content-Type is application/json\"] =",
									"responseHeaders[\"Content-Type\"].has(\"application/json\");",
									"}",
									"",
									"tests[\"Body contains id\"] = responseBody.has(\"id\");",
									"tests[\"Body contains description\"] = responseBody.has(\"description\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/operation/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"operation",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create a Operation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a514c5a8-480f-4e40-a9d0-78d422ffda33",
								"exec": [
									"var contentTypeHeaderExists = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"tests[\"Has Content-Type\"] = contentTypeHeaderExists;",
									"",
									"if (contentTypeHeaderExists) {",
									"tests[\"Content-Type is application/json\"] =",
									"responseHeaders[\"Content-Type\"].has(\"application/json\");",
									"}",
									"",
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"description\": \"Operation new\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/operation",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"operation"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update a Operation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a514c5a8-480f-4e40-a9d0-78d422ffda33",
								"exec": [
									"var contentTypeHeaderExists = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"tests[\"Has Content-Type\"] = contentTypeHeaderExists;",
									"",
									"if (contentTypeHeaderExists) {",
									"tests[\"Content-Type is application/json\"] =",
									"responseHeaders[\"Content-Type\"].has(\"application/json\");",
									"}",
									"",
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"description\": \"teste\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/operation/3",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"operation",
								"3"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete a specific Operation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a514c5a8-480f-4e40-a9d0-78d422ffda33",
								"exec": [
									"var contentTypeHeaderExists = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"tests[\"Has Content-Type\"] = contentTypeHeaderExists;",
									"",
									"if (contentTypeHeaderExists) {",
									"tests[\"Content-Type is application/json\"] =",
									"responseHeaders[\"Content-Type\"].has(\"application/json\");",
									"}",
									"",
									"tests[\"Status code is 201\"] = responseCode.code === 201;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/operation/4",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"operation",
								"4"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "ff5e1ab2-5f9b-4de5-8e0e-c23d885567ad",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "37cfc17a-42ff-49de-afa7-39dedbaf28ef",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "61c9592e-f356-4a72-a89d-f82c5215a528",
			"key": "base_url",
			"value": "localhost:44376",
			"type": "string"
		}
	],
	"protocolProfileBehavior": {}
}